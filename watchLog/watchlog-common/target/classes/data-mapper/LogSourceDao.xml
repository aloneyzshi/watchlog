<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netease.qa.log.meta.dao.LogSourceDao">

	<sql id="allColumn">
		log_source_id as logSourceId,
		log_source_name as logSourceName,
		log_type as logType,
		project_id as projectId,
		create_time as createTime,
		modify_time as modifyTime,
		hostname as hostname,
		path as path,
		file_pattern as filePattern,
		line_start_regex as lineStartRegex,
		line_filter_keyword as lineFilterKeyword,
		line_type_regex as lineTypeRegex,
		log_format as logFormat,
		creator_id as logSourceCreatorId,
		status as logSourceStatus
	</sql>

	<insert id="insert" parameterType="com.netease.qa.log.meta.LogSource" useGeneratedKeys="true" keyProperty="logSourceId">
		insert into log_source(log_source_name,project_id,log_type, create_time, hostname, path, file_pattern, line_start_regex, 
		line_filter_keyword, line_type_regex, creator_id, status)
		values(#{logSourceName},#{projectId}, 0, now(), #{hostname}, #{path}, #{filePattern}, #{lineStartRegex},
		 #{lineFilterKeyword}, #{lineTypeRegex}, #{logSourceCreatorId}, 0)
	</insert>
	
	<insert id="insertAll" parameterType="com.netease.qa.log.meta.LogSource" useGeneratedKeys="true" keyProperty="logSourceId">
	      insert into log_source(log_source_name, project_id, log_type, create_time, hostname, path, file_pattern, line_start_regex, 
	                              line_filter_keyword, line_type_regex, log_format, creator_id, status) 
	            values(#{logSourceName},#{projectId}, #{logType}, now(), #{hostname}, #{path}, #{filePattern},#{lineStartRegex},
		                 #{lineFilterKeyword}, #{lineTypeRegex}, #{logFormat}, #{logSourceCreatorId}, 0)
	</insert>

<!-- 为了不影响到web controller,单独更新nginx -->
	<update id="update" parameterType="com.netease.qa.log.meta.LogSource">
		update log_source set 
		log_source_name=#{logSourceName},
		project_id=#{projectId}, 
		hostname=#{hostname},
		path=#{path}, 
		file_pattern=#{filePattern},
		line_start_regex=#{lineStartRegex},
		line_filter_keyword=#{lineFilterKeyword},
		line_type_regex=#{lineTypeRegex},
		status=#{logSourceStatus} 
		where log_source_id=#{logSourceId}
	</update>
	
	<update id="updateAll" parameterType="com.netease.qa.log.meta.LogSource">
	    update log_source set 
		log_source_name=#{logSourceName},
		log_type=#{logType},
		project_id=#{projectId}, 
		hostname=#{hostname},
		path=#{path}, 
		file_pattern=#{filePattern},
		line_start_regex=#{lineStartRegex},
		line_filter_keyword=#{lineFilterKeyword},
		line_type_regex=#{lineTypeRegex},
		log_format=#{logFormat},
		status=#{logSourceStatus} 
		where log_source_id=#{logSourceId}
	</update>


	<delete id="delete" parameterType="java.lang.Integer">
		update log_source set status = 3  where log_source_id=#{logSourceId}
	</delete>
   
    <!-- limit 1 important -->
    <select id="findByLogSourceName" resultType="com.netease.qa.log.meta.LogSource">
        select
          <include refid="allColumn"/>
         from log_source where <![CDATA[status<>3]]> and log_source_name=#{logSourceName} limit 1
    </select>
    
	<select id="findByLogSourceId" parameterType="java.lang.Integer" resultType="com.netease.qa.log.meta.LogSource">
		select
		<include refid="allColumn" />
		from log_source where log_source_id=#{logSourceId} limit 1
	</select>

	<select id="findByLocation" resultType="com.netease.qa.log.meta.LogSource">
		select
		<include refid="allColumn" />
		from log_source where <![CDATA[status<>3]]> and hostname=#{0} and path=#{1} and file_pattern=#{2} limit 1
	</select>

	<select id="selectAllByProjectId" parameterType="java.lang.Integer"
		resultType="com.netease.qa.log.meta.LogSource">
		select
		<include refid="allColumn" />
		from log_source where <![CDATA[status<>3]]> and project_id=#{projectId}
	</select>
	
	<select id="selectAllByProjectIdOrderByName" parameterType="java.lang.Integer"
		resultType="com.netease.qa.log.meta.LogSource">
		select
		<include refid="allColumn" />
		from log_source where <![CDATA[status<>3]]> and project_id=#{projectId} order by log_source_name asc;
	</select>	
	
	<select id="getTotalCountByProjectId" parameterType="java.lang.Integer"
	     resultType="java.lang.Integer">
	     select count(log_source_id) as num from log_source where <![CDATA[status<>3]]> and project_id=#{projectId}
	</select>
	
	 
	<select id="findByProjectId" parameterType="java.lang.Integer"
	     resultType="com.netease.qa.log.meta.LogSource">
	     select
		<include refid="allColumn" />
		from log_source where <![CDATA[status<>3]]> and project_id=#{param1} limit #{param2} offset #{param3}
	</select>
	
	<select id="getSortedByProjectId" resultType="com.netease.qa.log.meta.LogSource">
	      select
	      <include refid="allColumn" />
	      from log_source where  <![CDATA[status<>3]]> and project_id=${param1} order by ${param2} ${param3} limit ${param4} offset ${param5}
	</select>
	
    <select id="findIdsByHostname"  resultType="java.lang.String">
		select group_concat(log_source_id) from log_source where <![CDATA[status<>3]]> and hostname=#{0}  and log_type=#{1}
	</select>
	
	<select id="getLogSourcesByHostname" resultType="com.netease.qa.log.meta.LogSource">
		select <include refid="allColumn" /> from log_source where <![CDATA[status<>3]]> and hostname=#{0}
	</select>
	
	
</mapper>



